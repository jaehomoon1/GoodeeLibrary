<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- advice 작동이 되는 메소드 -->
	<bean id="logExecute" class="com.min.edu.aop.DaoLogExecute"/>
	
	<!-- 
		aop 환경설정 
		cc + ccc 이것들을 weaver라고 하며 이 작업을 해주는 것이 auto-proxy라고 한다. 이것을 해주는 것이 <context:compoenet-scan>이 해준다.
		joinpoint, pointcut(expression(이것을 작성해주는 문서가 execution))
		excution 문법으로 작성해준다. aspect는 동작이 어떻게 될지 정의한다.
		error의 경우는 pointcut에 담겨있지 않고 예외처리 되면서 오기에 throwing로 던져주는데 던져주는 변수의 이름과 같아야한다.
	-->
	<aop:config>
		<aop:pointcut expression="execution(public * com.min.edu.model.*Dao*.*(..))" id="daoLogPoint"/>
		<aop:aspect ref="logExecute">
			<aop:before method="before" pointcut-ref="daoLogPoint"/>
			<aop:after-throwing method="error" pointcut-ref="daoLogPoint" throwing="exception"/>
		</aop:aspect>
	</aop:config>
	
	
	
	
	
</beans>
