<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- 
	국제화 코드를 가지고 있는 Properties 파일을 읽어옴 
	Spring-context-support에서 reloadable은 리로드 할 때마다 읽어와서 불러준다.
	1. propreties의 위치와 prefix를 작성
	2. 인코딩(UTF-8)
	3. 바꿔주기 위한 시간 
	-->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:locale/message"/>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="cacheSeconds" value="300"/>
	</bean>

	<!-- 처음에 호출되면 화면에서 기본이 되는 언어의 기본값을 선언해줘야한다.  -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="ko"/>
	</bean>
	<!--
	 	spring에서 흐름제어를 통해서 JSP에 Spring taglib에 값을 바인딩 해야한다.  
	 	화면 화면제어의(web.xml)의 Filter와 같은 <mvc:Interceptors>를 사용하여 가로챈다. 그리고  특 Param에 입력
	 	-->
	<mvc:interceptors>
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"/>
		</bean>
	</mvc:interceptors>
</beans>
