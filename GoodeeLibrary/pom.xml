<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.min.edu</groupId>
  <artifactId>GoodeeLibrary</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <properties>
		<java-version>11</java-version>
		<org.springframework-version>5.2.12.RELEASE</org.springframework-version>
		<org.aspectj-version>1.9.6</org.aspectj-version>
		<org.slf4j-version>1.7.25</org.slf4j-version>
	</properties>
	
  <name>GoodeeLibrary Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <dependencies>
  
    <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<dependency>
    		<groupId>org.aspectj</groupId>
    		<artifactId>aspectjweaver</artifactId>
    		<version>${org.aspectj-version}</version>
		</dependency>
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>        
		
		<!-- spring의 bean을 테스트 하기 위한 라이브러리 + Junit과 같이 사용됨 -->
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-test</artifactId>
    		<version>${org.springframework-version}</version>
		</dependency>
		
		
		<!-- AccessLogFilter에서 String 처리를 위해서 사용함 null 변경을 위해서 사용함 -->
	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-lang3</artifactId>
		<version>3.9</version>
	</dependency>
	
	<!-- EduVo의 데이터전송객체(DTO/VO)를 생성자/getter/setter 등을 annotation을 통해서 사용가능하도록 한 라이브러리이다. -->
	<dependency>
		<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
		<version>1.18.12</version>
	</dependency>	
	
	<!-- root context.xml에서 dataSource의 객체를 생성하기 위함 -->
	<dependency>
    	<groupId>org.apache.commons</groupId>
    	<artifactId>commons-dbcp2</artifactId>
    	<version>2.7.0</version>
	</dependency>
	
	<!-- Persistence Layer를 MyBatis 라이브러리를 사용하겠다  -->
	<dependency>
    	<groupId>org.mybatis</groupId>
    	<artifactId>mybatis</artifactId>
    	<version>3.5.6</version>
	</dependency>
	
	<!-- Mybatis sqlSessionFactory객체를 bean으로 만들어야하기 때문에 mybatis-spring.jar가 필요하다.  -->
	<dependency>
    	<groupId>org.mybatis</groupId>
   		<artifactId>mybatis-spring</artifactId>
    	<version>2.0.6</version>
	</dependency>
	
	<!-- spring에서 tx namespaces를 사용하기 위한 Transaction 설정이다. -->
	<dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-orm</artifactId>
    	<version>${org.springframework-version}</version>
	</dependency>
	<!-- Database에 따른 벤더사에서 제공해 주고 있는 DB 접속 라이브러리이다.  -->
	<dependency>
    	<groupId>com.oracle.database.jdbc</groupId>
    	<artifactId>ojdbc10</artifactId>
    	<version>19.12.0.0</version>
	</dependency>

	<!-- 
		20211206 
		1. ajax(비동기식 처리 방법)를 사용하여 Rest를 이용하는데 Jack_Bind 방식을 사용하는 법 @ResponceBody를 이용한다. @RestController
		2. 폼 Validation 처리를 할 것이다. 문제는 롬복이 문제가 생긴다. 
		3. International 적용, 국제화 코드, 언어변경을 할 것이다. 
		4. mail 보내는거 
		5. webSocket 동작하는 방법을 한 것이다. 
		-->
	
	<!-- 
		Spring Rest-API를 사용할 때 자바 객체를 json형태로 바꾼다 
		jackjson dataBind를 사용해야한다. 주의점 : 반드시 <mvc:annotation-driven>이 있어야한다. 
		만약에 안 되는 경우가 존재하면 core로 같이 올려줘야한다. 
		-->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
    		<artifactId>jackson-databind</artifactId>
    		<version>2.12.3</version>
		</dependency>
		<dependency>
    		<groupId>org.codehaus.jackson</groupId>
    		<artifactId>jackson-core-asl</artifactId>
    		<version>1.9.13</version>
		</dependency>
		
		<!--
			form Validation를 잡아주는 것, Spring tablib를 사용하여 유효값 처리 
			hibernate- validate를 체크해주면 된다. 	
		-->
		<dependency>
    		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-validator</artifactId>
    		<version>6.1.0.Final</version>
		</dependency>
		
		<!-- webSocket은 웹에서 소캣에서 열 수 있도록 해주는 것이다. 
			session을 찾아준다. 웹에서만 사용 가능한 소캣이다. 이것 사용 방법을 엄청 물어본다. 주로 javax(WAS를 따라가는 것)
		jsp에서 자동으로 소캣을 열어준다. -->
		<dependency>
    		<groupId>javax.websocket</groupId>
    		<artifactId>javax.websocket-api</artifactId>
    		<version>1.1</version>
		</dependency>
		
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-websocket</artifactId>
    		<version>${org.springframework-version}</version>
		</dependency>
		
		<!-- 메일(email) STMP -->
		<dependency>
    		<groupId>javax.mail</groupId>
   	 		<artifactId>mail</artifactId>
    		<version>1.4.7</version>
		</dependency>
		
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-context-support</artifactId>
    		<version>${org.springframework-version}</version>
		</dependency>
		
  </dependencies>
  
  <build>
    <finalName>GoodeeLibrary</finalName>
    <plugins> 
            <plugin>
               <artifactId>maven-compiler-plugin</artifactId>
    			<version>3.8.0</version>
    			<configuration>
    				<source>11</source>
    				<target>11</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>     
        </plugins>
  </build>
</project>
